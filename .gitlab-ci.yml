image: node:alpine

stages:
  - install
  - build
  - deploy

cache:
  key: cms
  paths:
    - node_modules

job_install:
  stage: install
  tags:
    - cms_specific_runner
  script:
    - npm install

job_build:
  stage: build
  tags:
    - cms_specific_runner
  script:
    - npm run build
  # OSS 使用 用于后续job执行时使用
  artifacts:
    paths:
      - dist/

job_deploy_by_docker:
  image: docker
  stage: deploy
  tags:
    - cms_specific_runner
  script:
    - docker build -t cms .
    - if [ $(docker ps -aq --filter name=cms_container) ]; then docker rm -f cms_container; fi
    - docker run -d -p 8080:80 --name cms_container cms
    - echo 'Deploy successful! visit http://kosanfai.top:8080'
# 解决 docker in docker 问题：
# 1.找到gitlab-runner配置文件映射目录 /src/gitlab-runner/config/
# 2.在 config.toml 文件中修改 对应runner的volumes配置 ["/usr/bin/docker:/usr/bin/docker", "/var/run/docker.sock:/var/run/docker.sock"]

job_deploy_by_oss:
  stage: deploy
  tags:
    - cms_specific_runner
  script:
    - wget http://gosspublic.alicdn.com/ossutil/1.6.18/ossutil64
    - chmod 755 ossutil64
    - ./ossutil64 config -e ${endPoint} -i ${accessKeyID} -k ${accessKeySecret} -L CH --loglevel debug -C ~/.ossutilconfig
    - ./ossutil64 -c ~/.ossutilconfig cp -r -f s dist oss://kosanfai/
  when: manual
