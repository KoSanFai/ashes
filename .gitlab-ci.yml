image: node:alpine

stages:
  - install
  - build
  - deploy

cache:
  key: react
  paths:
    - node_modules

job_install:
  stage: install
  tags:
    - react
  script:
    - npm install

job_build:
  stage: build
  tags:
    - react
  script:
    - npm run build
  # OSS 使用 用于后续job执行时使用
  # artifacts:
  #   paths:
  #     - dist/

job_deploy_by_docker:
  image: docker
  stage: deploy
  tags:
    - react
  script:
    - docker build -t react_demo .
    - if [ $(docker ps -aq --filter name=react_container) ]; then docker rm -f react_container; fi
    - docker run -d -p 8050:80 --name react_container react_demo
    - echo 'Deploy successful! visit http://kosanfai.top:8050'
# 解决 docker in docker 问题：
# 1.找到gitlab-runner配置文件映射目录 /src/gitlab-runner/config/
# 2.在 config.toml 文件中修改 对应runner的volumes配置 ["/usr/bin/docker:/usr/bin/docker", "/var/run/docker.sock:/var/run/docker.sock"]

# job_deploy_by_oss:
#   stage: deploy
#   tags:
#     - react
#   script:
#     - wget http://gosspublic.alicdn.com/ossutil/1.6.18/ossutil64
#     - chmod 755 ossutil64
#     - ./ossutil64 config -e ${endPoint} -i ${accessKeyID} -k ${accessKeySecret} -L CH --loglevel debug -C ~/.ossutilconfig
#     - ./ossutil64 -c ~/.ossutilconfig cp -r -f s dist oss://kosanfai/
#   when: manual
